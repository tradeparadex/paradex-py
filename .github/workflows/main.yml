name: Main

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Set up the UV environment
        uses: ./.github/actions/setup-uv-env
        with:
          python-version: "3.9"

      - name: Run checks (using Make)
        run: make check

  tox:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
      fail-fast: false
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Mount uv binary for tox runs
      - name: Mount uv binary
        run: docker run --rm --mount=type=bind,from=ghcr.io/astral-sh/uv:latest,source=/uv,target=/usr/local/bin/uv,ro ubuntu echo "UV mounted for tox"
        shell: bash
      # Ensure /usr/local/bin is in PATH if not already
      - name: Add /usr/local/bin to PATH
        run: echo "/usr/local/bin" >> $GITHUB_PATH
        shell: bash

      # Cache UV itself and its cache - skip caching mounted binary
      # - name: Cache UV global installation
      #   uses: actions/cache@v3
      #   with:
      #     path: /usr/local/bin/uv # Path where uv is mounted
      #     key: uv-global-${{ runner.os }}
      - name: Cache UV cache directory
        uses: actions/cache@v3
        with:
          path: ~/.cache/uv
          key: uv-cache-${{ runner.os }}-${{ matrix.python-version }}

      # Cache .tox directory based on python version and lockfile
      - name: Load cached .tox
        uses: actions/cache@v3
        id: cache-tox
        with:
          path: .tox
          key: tox-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml', 'uv.lock') }}
          restore-keys: |
            tox-${{ runner.os }}-${{ matrix.python-version }}-

      - name: Install tox and tox-gh-actions
        run: pip install tox tox-gh-actions
        shell: bash

      - name: Test with tox
        run: tox
        shell: bash

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        if: ${{ matrix.python-version == '3.11' }}

  check-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Set up the UV environment
        uses: ./.github/actions/setup-uv-env
        with:
          python-version: "3.9"

      - name: Check if documentation can be built (using Make)
        run: make docs-test
